generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Cart {
  id               String    @id
  userId           String    @db.Uuid
  quantity         Int
  deletedAt        DateTime?
  checkoutAt       DateTime?
  productVariantId String
  createdAt        DateTime  @default(now())
  Profiles         Profiles  @relation(fields: [userId], references: [id])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Category {
  id   String @id
  name String
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Inventory {
  id               String          @id
  productVariantId String
  quantity         Int
  status           InventoryStatus
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Product {
  id          String  @id @default(dbgenerated("gen_random_uuid()"))
  name        String
  price       Int
  imageUrl    String?
  slug        String  @unique
  description String  @default("")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Profiles {
  id                String    @id(map: "User_pkey") @default(dbgenerated("auth.uid()")) @db.Uuid
  email             String?   @unique(map: "User_email_key") @db.VarChar
  name              String?
  profilePictureUrl String?
  phoneNumber       String?   @db.VarChar(50)
  address           String?   @db.VarChar
  createdAt         DateTime? @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamptz(6)
  updatedAt         DateTime? @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamptz(6)
  Cart              Cart[]
}

enum InventoryStatus {
  AVAILABLE
  ON_ORDER
  RESERVED
}
